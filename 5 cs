Here's a short and corrected guide for basic set operations in Python:

1. Creating a Set

my_set = {1, 2, 3, 4}
empty_set = set()  # creating an empty set


2. Adding Elements

my_set.add(6)  # Adds "6" to the set


3. Removing Elements

my_set.remove(2)  # Removes "2"; raises an error if element is not present
my_set.discard(7)  # Removes "7" if present; no error if not present


4. Set Operations

set_1 = {1, 2, 3}
set_2 = {3, 4, 5}

# Union: Combine elements from both sets
union_set = set_1.union(set_2)  # {1, 2, 3, 4, 5}

# Intersection: Common elements in both sets
intersection_set = set_1.intersection(set_2)  # {3}

# Difference: Elements in set_1 but not in set_2
difference_set = set_1.difference(set_2)  # {1, 2}

# Symmetric Difference: Elements in either set_1 or set_2, but not both
sym_diff_set = set_1.symmetric_difference(set_2)  # {1, 2, 4, 5}



Here’s a corrected and concise guide for working with dictionaries in Python:

1. Creating a Dictionary

my_dict = {'name': 'John', 'age': 25, 'city': 'New York'}
empty_dict = {}  # creating an empty dictionary


2. Accessing Values

print(my_dict['name'])  # Accesses the value for 'name'
print(my_dict.get('age', 'Key not found'))  # Uses .get() to avoid errors if key doesn’t exist


3. Adding/Updating Values

my_dict['age'] = 26  # Updates the 'age' key value
my_dict['country'] = 'USA'  # Adds a new key-value pair


4. Removing Elements

my_dict.pop('city')  # Removes 'city' key, raises an error if key not found
del my_dict['name']  # Removes 'name' key


