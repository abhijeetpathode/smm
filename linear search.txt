linear search

#include <stdio.h>

int linearSearch(int arr[], int n, int key) {
    for (int i = 0; i < n; i++) {
        if (arr[i] == key) {
            return i; // Return the index where the element is found
        }
    }
    return -1; // Return -1 if the element is not found
}

int main() {
    int arr[] = {12, 34, 56, 78, 90, 23, 45};
    int n = sizeof(arr) / sizeof(arr[0]);
    int key, index;

    printf("Enter the element to search: ");
    scanf("%d", &key);

    index = linearSearch(arr, n, key);

    if (index != -1) {
        printf("Element %d found at index %d.\n", key, index);
    } else {
        printf("Element %d not found in the array.\n", key);
    }

    return 0;
}

binarry

#include <stdio.h>

int binarySearch(int arr[], int low, int high, int key) {
    while (low <= high) {
        int mid = low + (high - low) / 2;

        if (arr[mid] == key) {
            return mid; // Return the index where the element is found
        } else if (arr[mid] < key) {
            low = mid + 1; // Search the right half
        } else {
            high = mid - 1; // Search the left half
        }
    }
    return -1; // Return -1 if the element is not found
}

int main() {
    int arr[] = {12, 23, 34, 45, 56, 78, 90};
    int n = sizeof(arr) / sizeof(arr[0]);
    int key, index;

    printf("Enter the element to search: ");
    scanf("%d", &key);

    index = binarySearch(arr, 0, n - 1, key);

    if (index != -1) {
        printf("Element %d found at index %d.\n", key, index);
    } else {
        printf("Element %d not found in the array.\n", key);
    }

    return 0;
}
